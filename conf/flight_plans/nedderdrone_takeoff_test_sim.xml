<!DOCTYPE flight_plan SYSTEM "flight_plan.dtd">

<flight_plan alt="50" ground_alt="0" lat0="52.3931263" lon0="5.9207213" max_dist_from_home="600000" name="Rotorcraft Basic (Enac)" security_height="2">
  <header>
    #include "autopilot.h"
    #include "subsystems/datalink/datalink.h"
  </header>
  <waypoints>
    <waypoint name="HOME" x="0.0" y="0.0"/>
    <waypoint name="CLIMB" x="0.0" y="55.0"/>
    <waypoint name="STDBY" x="16.0" y="55.0"/>
    <waypoint name="p1" x="3.6" y="-139"/>
    <waypoint name="p2" x="275" y="-482"/>
    <waypoint name="p3" x="167" y="-196"/>
    <waypoint name="p4" x="137" y="-407"/>
    <waypoint name="TD" x="55.6" y="-10.9"/>
    <waypoint name="FOLLOW" x="60.5" y="13.5"/>

    <!-- 't Harde -->
    <!--waypoint name="R1" lat="52.3938563" lon="5.9233533"/>
    <waypoint name="R2" lat="52.3924228" lon="5.9211302"/>
    <waypoint name="R3" lat="52.3998454" lon="5.9102605"/>
    <waypoint name="R4" lat="52.4015975" lon="5.9170479"/-->

    <!-- EHR8 -->
    <waypoint name="C1" lat="52.96166667" lon="4.740277778"/>
    <waypoint name="C2" lat="52.86666667" lon="4.716666667"/>
    <waypoint name="C3" lat="52.78333333" lon="4.683333333"/>
    <waypoint name="C4" lat="52.75" lon="4.533333333"/>
    <waypoint name="C5" lat="52.775" lon="4.433333333"/>
    <waypoint name="C6" lat="52.81666667" lon="4.35"/>
    <waypoint name="C7" lat="53.08333333" lon="4.35"/>
    <waypoint name="C8" lat="53.10277778" lon="4.515555556"/>
    <waypoint name="C9" lat="53.04972222" lon="4.679444444"/>
  </waypoints>
  <sectors>
    <sector color="orange" name="EHR8" type="dynamic">
      <corner name="C1"/>
      <corner name="C2"/>
      <corner name="C3"/>
      <corner name="C4"/>
      <corner name="C5"/>
      <corner name="C6"/>
      <corner name="C7"/>
      <corner name="C8"/>
      <corner name="C9"/>
    </sector>
    <!--sector color="red" name="RES" type="dynamic">
      <corner name="R1"/>
      <corner name="R2"/>
      <corner name="R3"/>
      <corner name="R4"/>
    </sector-->
  </sectors>
  <modules>
    <module name="follow_me"/>
  </modules>
  <exceptions>
    <!--exception cond="Or(!InsideEHR8(GetPosX(), GetPosY()), GetPosAlt() > GetAltRef() + 1500) && !(nav_block == IndexOfBlock('Wait GPS')) && !(nav_block == IndexOfBlock('Geo init')) && !(nav_block == IndexOfBlock('Holding point')) && !(nav_block == IndexOfBlock('Standby'))" deroute="Standby"/-->
    <exception cond="datalink_time > 25 && !(nav_block == IndexOfBlock('Wait GPS')) && !(nav_block == IndexOfBlock('Geo init')) && !(nav_block == IndexOfBlock('Holding point')) && !(nav_block == IndexOfBlock('Standby'))" deroute="Standby"/>
  </exceptions>
  <blocks>
    <block name="Wait GPS">
      <call_once fun="NavKillThrottle()"/>
      <while cond="!GpsFixValid()"/>
    </block>
    <block name="Geo init">
      <while cond="LessThan(NavBlockTime(), 2)"/>
      <call_once fun="NavSetGroundReferenceHere()"/>
      <!--<call_once fun="NavSetAltitudeReferenceHere()"/>-->
    </block>
    <block name="Holding point">
      <call_once fun="NavKillThrottle()"/>
      <attitude pitch="0" roll="0" throttle="0" vmode="throttle" until="FALSE"/>
    </block>
    <block name="Start Engine">
      <call_once fun="NavResurrect()"/>
      <call_once fun="nav_set_heading_current()"/>
      <attitude pitch="0" roll="0" throttle="0" vmode="throttle" until="stage_time>1"/>
    </block>
    <block name="TakeoffLow" strip_button="Takeoff" strip_icon="takeoff.png">
      <exception cond="stateGetPositionEnu_f()->z > 10.0" deroute="Takeoff"/>
      <call_once fun="nav_set_heading_current()"/>
      <attitude pitch="0." roll="0" throttle="0.60" vmode="throttle"/>
    </block>
    <block name="Takeoff" strip_button="Takeoff" strip_icon="takeoff.png">
      <exception cond="stateGetPositionEnu_f()->z > 40.0" deroute="Standby"/>
      <call_once fun="nav_set_heading_current()"/>
      <stay pre_call="follow_me_set_wp(WP_CLIMB, 0)" vmode="climb" climb="nav_climb_vspeed" wp="CLIMB"/>
    </block>

    <block name="Standby" strip_button="Standby" strip_icon="home.png">
      <!--set var="force_forward_flight" value="FALSE"/-->
      <stay wp="STDBY"/>
    </block>

    <block name="stay_p1">
      <!--<set var="force_forward_flight" value="FALSE"/>-->
      <stay wp="p1"/>
    </block>
    <block name="go_p2">
      <!--<set var="force_forward_flight" value="TRUE"/>-->
      <call_once fun="nav_set_heading_deg(90)"/>
      <go wp="p2"/>
      <deroute block="stay_p1"/>
    </block>
    <block name="line_p1_p2">
      <!--<set var="force_forward_flight" value="TRUE"/>-->
      <go from="p1" hmode="route" wp="p2"/>
      <stay wp="p2" until="stage_time>10"/>
      <go from="p2" hmode="route" wp="p1"/>
      <deroute block="line_p1_p2"/>
    </block>
    <block name="route">
      <!--<set var="force_forward_flight" value="TRUE"/>-->
      <go from="p1" hmode="route" wp="p3"/>
      <go from="p3" hmode="route" wp="p4"/>
      <go from="p4" hmode="route" wp="p1"/>
      <deroute block="route"/>
    </block>
    <block name="Oval">
      <!--<set var="force_forward_flight" value="TRUE"/>-->
      <oval p1="p1" p2="p2" radius="nav_radius"/>
    </block>

    <block name="land here" strip_button="Land Here" strip_icon="land-right.png">
      <!--<set var="force_forward_flight" value="FALSE"/>-->
      <call_once fun="NavSetWaypointHere(WP_TD)"/>
    </block>
    <block name="land">
      <!--<set var="force_forward_flight" value="FALSE"/>-->
      <go wp="TD"/>
    </block>
    <block name="descend">
      <!--<set var="force_forward_flight" value="FALSE"/>-->
      <exception cond="LessThan(stateGetPositionEnu_f()->z, 15.0)" deroute="flare"/>
      <stay climb="nav_descend_vspeed" vmode="climb" wp="TD"/>
    </block>
    <block name="flare">
      <!--<set var="force_forward_flight" value="FALSE"/>-->
      <stay climb="nav_descend_vspeed*0.1" vmode="climb" wp="TD"/>
    </block>
    <block name="landed">
      <attitude pitch="0" roll="0" throttle="0" vmode="throttle" until="FALSE"/>
    </block>
  </blocks>
</flight_plan>
