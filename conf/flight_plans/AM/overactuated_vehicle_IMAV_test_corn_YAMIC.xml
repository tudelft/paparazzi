<!DOCTYPE flight_plan SYSTEM "../flight_plan.dtd">

<flight_plan alt="325" ground_alt="262" lat0="50.7291180" lon0="5.8873630" max_dist_from_home="1000" name="Overactuated vehicle IMAV test corn Belgium" security_height="300">
  <header>
    #include "autopilot.h"
    #include "modules/datalink/datalink.h"
    #include "modules/Overactuated_vehicle/Overactuated_mixing.h"
    static inline bool delay_test_rc(bool test, int delay) {
      static int nb = 0;
        if (test) {
        nb++;
        if (nb == delay) {
          nb = 0;
          return true;
        }
        return false;
      } else {
        nb = 0;
        return false;
      }
    }
</header>
  <waypoints>
    <waypoint name="HOME" x="-9.0" y="10.3"/>
    <waypoint name="CLIMB" x="-43.4" y="29.2"/>
    <waypoint lat="50.729961" lon="5.887935" name="STDBY"/>
    <waypoint lat="50.731178" lon="5.887627" name="p1"/>
    <waypoint lat="50.730750" lon="5.890329" name="p2"/>
    <waypoint lat="50.729215" lon="5.889499" name="p3"/>
    <waypoint lat="50.730064" lon="5.886441" name="p4"/>
    <waypoint lat="50.729280" lon="5.886908" name="TD"/>
    <waypoint lat="50.727325" lon="5.881667" name="APP"/>
    <waypoint lat="50.731015" lon="5.890645" name="FOLLOW"/>
    <waypoint lat="50.731615" lon="5.888488" name="FOLLOW_ARUCO"/>
    <waypoint lat="50.731679" lon="5.897838" name="C1"/>
    <waypoint lat="50.728127" lon="5.898672" name="C2"/>
    <waypoint lat="50.724964" lon="5.895894" name="C3"/>
    <waypoint lat="50.723357" lon="5.888871" name="C4"/>
    <waypoint lat="50.725053" lon="5.881581" name="C5"/>
    <waypoint lat="50.727657" lon="5.880108" name="C6"/>
    <waypoint lat="50.732536" lon="5.885131" name="C7"/>
    <waypoint lat="50.734221" lon="5.889025" name="C8"/>
    <waypoint lat="50.734087" lon="5.893085" name="C9"/>
    <waypoint lat="50.727626" lon="5.894904" name="FLY1"/>
    <waypoint lat="50.726570" lon="5.893148" name="FLY2"/>
    <waypoint lat="50.725044" lon="5.888943" name="FLY3"/>
    <waypoint lat="50.726017" lon="5.886084" name="FLY4"/>
    <waypoint lat="50.727508" lon="5.882457" name="FLY5"/>
    <waypoint lat="50.729703" lon="5.884201" name="FLY6"/>
    <waypoint lat="50.731835" lon="5.887318" name="FLY7"/>
    <waypoint lat="50.732494" lon="5.889264" name="FLY8"/>
    <waypoint lat="50.729893" lon="5.895270" name="FLY9"/>
    <waypoint lat="50.728083" lon="5.885457" name="M1"/>
    <waypoint lat="50.730119" lon="5.889529" name="M2"/>
    <waypoint lat="50.727777" lon="5.886005" name="M3"/>
    <waypoint lat="50.729872" lon="5.889984" name="M4"/>
    <waypoint lat="50.727500" lon="5.886578" name="M5"/>
    <waypoint lat="50.729607" lon="5.890436" name="M6"/>
    <waypoint lat="50.729332" lon="5.890778" name="M7"/>
    <waypoint lat="50.727275" lon="5.887226" name="M8"/>
    <waypoint lat="50.729054" lon="5.891475" name="M9"/>
    <waypoint lat="50.727018" lon="5.887763" name="M10"/>
    <waypoint lat="50.726737" lon="5.888124" name="M11"/>
    <waypoint lat="50.728379" lon="5.884745" name="M12"/>
    <waypoint lat="50.730423" lon="5.888982" name="M13"/>
    <waypoint lat="50.728793" lon="5.892046" name="M14"/>
    <waypoint lat="50.726886" lon="5.888871" name="M15"/>
    <waypoint lat="50.727866" lon="5.884748" name="M16"/>
  </waypoints>
  <sectors>
    <sector color="orange" name="Safe_area">
      <corner name="FLY1"/>
      <corner name="FLY2"/>
      <corner name="FLY3"/>
      <corner name="FLY4"/>
      <corner name="FLY5"/>
      <corner name="FLY6"/>
      <corner name="FLY7"/>
      <corner name="FLY8"/>
      <corner name="FLY9"/>
    </sector>
    <sector color="red" name="Flight_area">
      <corner name="C1"/>
      <corner name="C2"/>
      <corner name="C3"/>
      <corner name="C4"/>
      <corner name="C5"/>
      <corner name="C6"/>
      <corner name="C7"/>
      <corner name="C8"/>
      <corner name="C9"/>
    </sector>
  </sectors>
  <modules>
    <module name="follow_me"/>
  </modules>
  <exceptions>
    <exception cond="(!InsideSafe_area(GetPosX(), GetPosY()) @OR GetPosAlt() @GT GetAltRef() + 110) 
    @AND (nav_block @GT IndexOfBlock('Standby')) @AND (nav_block @LT IndexOfBlock('landed')) @AND !(nav_block == IndexOfBlock('Wait GPS')) 
    @AND !(nav_block == IndexOfBlock('Geo init')) @AND !(nav_block == IndexOfBlock('Holding point'))" deroute="Standby"/>
    <exception cond="(!InsideFlight_area(GetPosX(), GetPosY()) @OR GetPosAlt() @GT GetAltRef() + 120) 
    @AND (nav_block @GT IndexOfBlock('Standby')) @AND (nav_block @LT IndexOfBlock('landed')) @AND !(nav_block == IndexOfBlock('Wait GPS')) 
    @AND !(nav_block == IndexOfBlock('Geo init')) @AND !(nav_block == IndexOfBlock('Holding point'))" deroute="landed"/>
    <exception cond="electrical.bat_low @AND autopilot_in_flight() @AND (nav_block @GT IndexOfBlock('Standby')) 
                     @AND (nav_block @LT IndexOfBlock('landed'))" deroute="descend"/>
    <exception cond="(nav_block @GT IndexOfBlock('Standby') @AND nav_block @LT IndexOfBlock('landed'))
    @AND GpsIsLost() @AND delay_test_rc(RadioControlIsLost(),20)" deroute="landed"/>
    <exception cond="(GpsIsLost() @AND (datalink_time @GT 15) @AND nav_block @GT IndexOfBlock('Standby') 
                     @AND nav_block @LT IndexOfBlock('landed'))" deroute="Enter_AP_MODE_RC_DIRECT"/>
  </exceptions>
  <blocks>
    <block name="Enter_AP_MODE_RC_DIRECT">
      <set value="AP_MODE_RC_DIRECT" var="autopilot.mode"/>
      <set value="0" var="force_forward"/>
      <set value="0" var="approach_state"/>
    </block>
    <block name="Wait GPS">
      <set value="0" var="approach_state"/>
      <set value="0" var="force_forward"/>
      <call_once fun="NavKillThrottle()"/>
      <while cond="!GpsFixValid() || !state.ned_initialized_i"/>
    </block>
    <block name="Geo init">
      <set value="0" var="approach_state"/>
      <set value="0" var="force_forward"/>
      <while cond="LessThan(NavBlockTime(), 10)"/>
      <call_once fun="NavSetAltitudeReferenceHere()"/>
    </block>
    <block name="Holding point">
      <set value="0" var="force_forward"/>
      <set value="0" var="approach_state"/>
      <call_once fun="NavKillThrottle()"/>
      <attitude pitch="0" pre_call="NavKillThrottle()" roll="0" throttle="0" until="FALSE" vmode="throttle"/>
    </block>
    <block name="Start Engine">
      <set value="1" var="approach_state"/>
      <set value="0" var="force_forward"/>
      <call_once fun="NavResurrect()"/>
      <call_once fun="NavSetWaypointHere(WP_TD)"/>
      <stay climb="-0.5" vmode="climb" wp="TD"/>
    </block>
    <block name="Takeoff" strip_button="Takeoff" strip_icon="takeoff.png">
      <set value="1" var="approach_state"/>
      <set value="0" var="force_forward"/>
      <exception cond="stateGetPositionEnu_f()->z > 10.0" deroute="Standby"/>
      <call_once fun="NavSetWaypointHere(WP_CLIMB)"/>
      <stay wp="CLIMB"/>
    </block>
    <block name="Standby" strip_button="Standby" strip_icon="home.png">
      <set value="0" var="approach_state"/>
      <set value="0" var="force_forward"/>
      <stay wp="STDBY"/>
    </block>
    <block name="Follow_Aruco">
      <set value="0" var="approach_state"/>
      <set value="0" var="force_forward"/>
      <stay wp="FOLLOW_ARUCO"/>
    </block>
    <block name="follow_module">
      <set value="0" var="force_forward"/>
      <set value="0" var="approach_state"/>
      <stay pre_call="follow_me_set_wp(WP_FOLLOW, 0)" wp="FOLLOW"/>
    </block>
    <block name="stay_p1">
      <set value="0" var="approach_state"/>
      <set value="0" var="force_forward"/>
      <stay wp="p1"/>
    </block>
    <block name="go_p2">
      <set value="0" var="force_forward"/>
      <set value="0" var="approach_state"/>
      <call_once fun="nav_set_heading_deg(90)"/>
      <go wp="p2"/>
      <deroute block="stay_p1"/>
    </block>
    <block name="line_p1_p2">
      <set value="0" var="force_forward"/>
      <set value="0" var="approach_state"/>
      <stay until="stage_time>10" wp="p1"/>
      <go from="p1" hmode="route" wp="p2"/>
      <stay wp="p2"/>
    </block>
    <block name="wp_goto_route">
      <set value="1" var="force_forward"/>
      <set value="0" var="approach_state"/>
      <go wp="p1"/>
      <go wp="p2"/>
      <go wp="p3"/>
      <go wp="p4"/>
      <deroute block="wp_goto_route"/>
    </block>
    <block name="route">
      <set value="1" var="force_forward"/>
      <set value="0" var="approach_state"/>
      <go from="p1" hmode="route" wp="p2"/>
      <go from="p2" hmode="route" wp="p3"/>
      <go from="p3" hmode="route" wp="p4"/>
      <go from="p4" hmode="route" wp="p1"/>
      <deroute block="route"/>
    </block>
    <block name="Oval">
      <set value="1" var="force_forward"/>
      <set value="0" var="approach_state"/>
      <oval p1="p1" p2="p2" radius="100"/>
    </block>
    <block name="Circle_CW">
      <set value="1" var="force_forward"/>
      <set value="0" var="approach_state"/>
      <circle radius="100" wp="p1"/>
    </block>
    <block name="Circle_CCW">
      <set value="1" var="force_forward"/>
      <set value="0" var="approach_state"/>
      <circle radius="-100" wp="p1"/>
    </block>
    <block name="Approach APP">
      <set value="0" var="force_forward"/>
      <set value="1" var="approach_state"/>
      <stay alt="WaypointAlt(WP_APP)" pre_call="approach_moving_target_enable(WP_APP)" wp="APP"/>
    </block>
    <block name="Mapping hmode">
      <set value="1" var="force_forward"/>
      <set value="0" var="approach_state"/>
      <go from="M1" hmode="route" wp="M2"/>
      <go from="M2" hmode="route" wp="M6"/>
      <go from="M6" hmode="route" wp="M5"/>
      <go from="M5" hmode="route" wp="M10"/>
      <go from="M10" hmode="route" wp="M9"/>
      <go from="M9" hmode="route" wp="M4"/>
      <go from="M4" hmode="route" wp="M3"/>
      <go from="M3" hmode="route" wp="M8"/>
      <go from="M8" hmode="route" wp="M7"/>
    </block>
    <block name="Mapping">
      <set value="1" var="force_forward"/>
      <set value="0" var="approach_state"/>
      <go from="M1" wp="M2"/>
      <go from="M2" wp="M6"/>
      <go from="M6" wp="M5"/>
      <go from="M5" wp="M10"/>
      <go from="M10" wp="M9"/>
      <go from="M9" wp="M4"/>
      <go from="M4" wp="M3"/>
      <go from="M3" wp="M8"/>
      <go from="M8" wp="M7"/>
    </block>
    <block name="land here" strip_button="Land Here" strip_icon="land-right.png">
      <set value="1" var="approach_state"/>
      <set value="0" var="force_forward"/>
      <call_once fun="NavSetWaypointHere(WP_TD)"/>
    </block>
    <block name="land">
      <set value="0" var="force_forward"/>
      <set value="1" var="approach_state"/>
      <go wp="TD"/>
    </block>
    <block name="descend">
      <set value="0" var="force_forward"/>
      <set value="1" var="approach_state"/>
      <exception cond="!(stateGetPositionEnu_f()->z > 12.0)" deroute="flare"/>
      <stay climb="-1.5" vmode="climb" wp="TD"/>
    </block>
    <block name="flare">
      <set value="0" var="force_forward"/>
      <set value="1" var="approach_state"/>
      <stay climb="-0.8" vmode="climb" wp="TD"/>
      <exception cond="!(stateGetPositionEnu_f()->z > 1.0)" deroute="flare_low"/>
      <exception cond="agl_dist_valid @AND !(agl_dist_value > 0.50)" deroute="flare_low"/>
    </block>
    <block name="flare_low">
      <set value="0" var="force_forward"/>
      <set value="1" var="approach_state"/>
      <exception cond="detect_ground_on_landing()" deroute="landed"/>
      <stay climb="-0.5" vmode="climb" wp="TD"/>
    </block>
    <block name="landed">
      <set value="0" var="force_forward"/>
      <set value="1" var="approach_state"/>
      <call_once fun="NavKillThrottle()"/>
      <attitude pitch="0" roll="0" throttle="0" until="FALSE" vmode="throttle"/>
    </block>
  </blocks>
</flight_plan>
