<!DOCTYPE flight_plan SYSTEM "../flight_plan.dtd">

<flight_plan alt="70.0" ground_alt="0" lat0="52.1681551" lon0="4.4126468" max_dist_from_home="1070" name="Oneloop Valkenburg" security_height="2">
  <header>
    #include "autopilot.h"
    #include "modules/datalink/datalink.h"
    #include "modules/energy/electrical.h"
    #include "modules/radio_control/radio_control.h"
    #include "modules/ahrs/ahrs.h"
</header>
  <waypoints>
    <waypoint name="HOME" x="0" y="0"/>
    <waypoint name="CLIMB" x="300." y="70"/>
    <waypoint name="trans" x="300." y="100."/>
    <waypoint name="decel" x="300." y="110."/>
    <waypoint name="begin_trans" x="300." y="90."/>
    <waypoint name="end_trans" x="300." y="120."/>    
    <waypoint name="STDBY" x="60" y="20"/>
    <waypoint name="p1" x="322.0" y="-254.3"/>
    <waypoint name="p2" x="696.0" y="-148.1"/>
    <waypoint name="p3" x="600.4" y="73.4"/>
    <waypoint name="p4" x="238.6" y="-48.5"/>
    <waypoint name="circ" x="160" y="25"/>
    <waypoint name="TD" x="10" y="-1"/>
    <waypoint name="FOLLOW" lat="52.16850964562752" lon="4.413635008734417"/>
    <waypoint name="S1" lat="52.1669450" lon="4.4174372"/>
    <waypoint name="S2" lat="52.1689871" lon="4.4208804"/>
    <waypoint lat="52.169189"  lon="4.410820"  name="C1"/>
    <waypoint lat="52.168049"  lon="4.406923"  name="C2"/>
    <waypoint lat="52.166515"  lon="4.408235"  name="C3"/>
    <waypoint lat="52.163255"  lon="4.407668"  name="C4"/>
    <waypoint lat="52.161908"  lon="4.410082"  name="C5"/>
    <waypoint lat="52.162641"  lon="4.416992"  name="C6"/>
    <waypoint lat="52.164861"  lon="4.427268"  name="C7"/>
    <waypoint lat="52.170422"  lon="4.427511"  name="C8"/>
    <waypoint lat="52.172276"  lon="4.424011"  name="C9"/>
    <waypoint lat="52.1663689" lon="4.4131328" name="p5"/>
    <waypoint lat="52.1674751" lon="4.4179556" name="p6"/>
    <waypoint lat="52.1697353" lon="4.4166975" name="p7"/>
    <waypoint lat="52.1687299" lon="4.4119042" name="p8"/>
  </waypoints>
  <sectors>
    <sector color="red" name="Hard_Geofence">
      <corner name="C1"/>
      <corner name="C2"/>
      <corner name="C3"/>
      <corner name="C4"/>
      <corner name="C5"/>
      <corner name="C6"/>
      <corner name="C7"/>
      <corner name="C8"/>
      <corner name="C9"/>
    </sector>
        <sector color="blue" name="Soft_Geofence">
      <corner name="p5"/>
      <corner name="p6"/>
      <corner name="p7"/>
      <corner name="p8"/>
    </sector>
  </sectors>
  <modules>
    <!--<module name="follow_me">
      <define name="FOLLOW_ME_MOVING_WPS" value="WP_p1,WP_p2,WP_p3,WP_p4,WP_STDBY,WP_circ,WP_APP"/>
    </module> -->
  </modules>
  <exceptions>
       <!--Soft Geofencing (go back to Standby)-->
    <exception cond="Or(!InsideSoft_Geofence(GetPosX(), GetPosY()), GetPosAlt() @GT 100.0) @AND
     !(nav_block == IndexOfBlock('Wait GPS')) @AND
     !(nav_block == IndexOfBlock('Geo init'))" deroute="safe"/>
    <!-- Hard Geofencing (Kill) -->
    <exception cond="(Or(!InsideHard_Geofence(GetPosX(), GetPosY()), GetPosAlt() @GT 100.0) @AND
      !(IndexOfBlock('Holding point') @GT nav_block) @AND
      !(nav_block >= IndexOfBlock('land here')) @AND
      (autopilot_in_flight() == true) )" deroute="Landed"/>
    <!-- RC lost -->
    <exception cond="((radio_control.status == RC_REALLY_LOST) @AND
      !(IndexOfBlock('Holding point') @GT nav_block) @AND
      !(nav_block >= IndexOfBlock('land here')) @AND
      (autopilot_in_flight() == true) )" deroute="Landed"/>
    <!-- Datalink lost  -->
    <exception cond="((datalink_time @GT 5) @AND
      !(IndexOfBlock('Holding point') @GT nav_block) @AND
      !(nav_block >= IndexOfBlock('land here')) @AND
      (autopilot_in_flight() == true) )" deroute="Landed"/>
    <!-- Bat low (constant RPM descent)-->
    <exception cond="(electrical.bat_low @AND
      !(IndexOfBlock('Holding point') @GT nav_block) @AND
      !(nav_block >= IndexOfBlock('land here')) @AND
      (autopilot_in_flight() == true) )" deroute="land here"/>
    <!-- Bat critical (constant RPM no stabilization)-->
    <exception cond="(electrical.bat_critical @AND
      !(IndexOfBlock('Holding point') @GT nav_block) @AND
      !(nav_block >= IndexOfBlock('land here')) @AND
      (autopilot_in_flight() == true) )" deroute="land here"/>
  </exceptions>
  <blocks>
    <block name="Wait GPS">
      <call_once fun="rotwing_request_configuration(ROTWING_CONFIGURATION_HOVER)"/>
      <call_once fun="NavKillThrottle()"/>
      <while cond="!GpsFixValid() || !state.ned_initialized_i"/>
    </block>
    <block name="Geo init">
      <call_once fun="rotwing_request_configuration(ROTWING_CONFIGURATION_HOVER)"/>
      <while cond="LessThan(NavBlockTime(), 10)"/>
      <call_once fun="NavSetAltitudeReferenceHere()"/>
    </block>
    <block name="Holding point">
      <call_once fun="rotwing_request_configuration(ROTWING_CONFIGURATION_HOVER)"/>
      <call_once fun="NavKillThrottle()"/>
      <set var="commands[COMMAND_MOTOR_PUSHER]" value="0"/>
      <attitude pitch="0" roll="0" throttle="0" until="FALSE" vmode="throttle"/>
    </block>
    <block name="Start Engine" strip_button="Start Engines" strip_icon="on.png">
        <call_once fun="rotwing_request_configuration(ROTWING_CONFIGURATION_HOVER)"/>
      <call_once fun="NavResurrect()"/>
        <attitude pitch="0" roll="0" throttle="0" until="stage_time>10" vmode="throttle"/>
    </block>
    <block name="Takeoff" strip_button="Takeoff" strip_icon="takeoff.png">
        <call_once fun="rotwing_request_configuration(ROTWING_CONFIGURATION_HOVER)"/>
        <exception cond="agl_dist_valid @AND (agl_dist_value @GT 1.0)" deroute="Climb"/>
        <call_once fun="autopilot_set_in_flight(true)"/><!-- this is a hack to solve INDI not being active fast enough -->

      <call_once fun="NavSetWaypointHere(WP_CLIMB)"/>
        <attitude pitch="0" roll="0" throttle="0.75" until="stage_time>3" vmode="throttle"/>
    </block>
    <block name="Climb">
      <exception cond="GetPosHeight() @GT 20.0" deroute="Standby"/>
      <call_once fun="rotwing_request_configuration(ROTWING_CONFIGURATION_HOVER)"/>
      <call_once fun="nav_set_heading_current()"/>
      <stay climb="nav.climb_vspeed" vmode="climb" wp="CLIMB"/>
    </block>
    <block name="Pre-Standby">
      <while cond="oneloop_andi.half_loop"/>
      <!-- <call_once fun="NavSetWaypointPosAndAltHere(WP_STDBY)"/> -->
    </block>
    <block name="Standby" strip_button="Standby" strip_icon="home.png">
        <call_once fun="rotwing_request_configuration(ROTWING_CONFIGURATION_HOVER)"/>
        <stay wp="STDBY" pre_call="rot_wing_vis_transition(WP_trans, WP_decel, WP_end_trans)"/>
    </block>
    <block name="Standby_fwd">
      <call_once fun="rotwing_request_configuration(ROTWING_CONFIGURATION_HYBRID)"/>
      <stay wp="STDBY" pre_call="rot_wing_vis_transition(WP_trans, WP_decel, WP_end_trans)"/>
    </block>
    <block name="stay_begin-trans">
      <call_once fun="rotwing_request_configuration(ROTWING_CONFIGURATION_HOVER)"/>
      <stay wp="begin_trans" pre_call="rot_wing_vis_transition(WP_trans, WP_decel, WP_end_trans)"/>
    </block>  
    <block name="end_transition">
      <call_once fun="rotwing_request_configuration(ROTWING_CONFIGURATION_HOVER)"/>
      <stay wp="end_trans"/>
    </block>
    <block name="transition_CW">
      <call_once fun="rotwing_request_configuration(ROTWING_CONFIGURATION_HYBRID)"/>
      <stay wp="end_trans"/>
      <exception cond="RotWingAutomationReadyForForward()" deroute="Circle_CW_fwd"/>
    </block>
    <block name="transition_CCW">
      <call_once fun="rotwing_request_configuration(ROTWING_CONFIGURATION_HYBRID)"/>
      <stay wp="end_trans"/>
      <exception cond="RotWingAutomationReadyForForward()" deroute="Circle_CCW_fwd"/>
    </block>      
    <block name="safe">
      <stay wp="HOME"/>
    </block>
    <block name="Circle_CW_fwd" strip_button="CircleRight" strip_icon="circle-right.png">
      <call_once fun="rotwing_request_configuration(ROTWING_CONFIGURATION_EFFICIENT)"/>
      <circle radius="100" wp="circ" pre_call="rot_wing_vis_transition(WP_trans, WP_decel, WP_end_trans)"/>
    </block>
    <block name="Circle_CCW_fwd" strip_button="CircleLeft" strip_icon="circle-left.png">
      <call_once fun="rotwing_request_configuration(ROTWING_CONFIGURATION_EFFICIENT)"/>
      <circle radius="-100" wp="circ" pre_call="rot_wing_vis_transition(WP_trans, WP_decel, WP_end_trans)"/>
    </block>
    <block name="Circle_CW">
      <set value="false" var="force_forward"/>
      <circle radius="100" wp="FOLLOW"/>
    </block>
    <block name="Transition_quad">
      <call_once fun="rotwing_request_configuration(ROTWING_CONFIGURATION_HYBRID)"/>
      <go wp="STDBY"/>
      <deroute block="Standby"/>
    </block>    
    <block name="land here">
        <call_once fun="rotwing_request_configuration(ROTWING_CONFIGURATION_HOVER)"/>
        <call_once fun="NavSetWaypointHere(WP_TD)"/>
    </block>
    <block name="land" strip_button="Land" strip_icon="land-right.png">
        <call_once fun="rotwing_request_configuration(ROTWING_CONFIGURATION_HOVER)"/>
        <go wp="TD"/>
    </block>
    <block name="descend">
        <call_once fun="rotwing_request_configuration(ROTWING_CONFIGURATION_HOVER)"/>
        <exception cond="GetPosHeight() @LT 12.0" deroute="flare"/>
        <stay climb="-1.0" vmode="climb" wp="TD"/>
    </block>    
    <block name="flare">
        <call_once fun="rotwing_request_configuration(ROTWING_CONFIGURATION_HOVER)"/>
        <stay climb="-0.5" vmode="climb" wp="TD"/>
        <!--<exception cond="!(GetPosHeight() @LT 2.0)" deroute="flare_low"/>-->
        <exception cond="agl_dist_valid @AND (agl_dist_value @LT 0.28)" deroute="flare_low"/>
    </block>
    <block name="flare_low">
        <call_once fun="rotwing_request_configuration(ROTWING_CONFIGURATION_HOVER)"/>
        <exception cond="NavDetectGround()" deroute="Holding point"/>
        <exception cond="!nav_is_in_flight()" deroute="Holding point"/>
        <exception cond="ground_detect()" deroute="Holding point"/>
        <call_once fun="NavStartDetectGround()"/>
        <stay climb="-0.5" vmode="climb" wp="TD"/>
    </block>    
    <block name="Safe landing">
      <exception cond="!nav_is_in_flight()" deroute="Manual"/>
      <exception cond="0.10 @GT GetPosAlt()" deroute="Manual"/>
      <call_once fun="NavStartDetectGround()"/>
      <stay climb="nav.descend_vspeed" vmode="climb" wp="TD"/>
    </block>
    <block name="Manual">
      <set value="AP_MODE_ATTITUDE_DIRECT" var="autopilot_mode_auto2"/>
      <stay wp="STDBY"/>
    </block>
    <block name="Landed">
      <call_once fun="NavKillThrottle()"/>
      <call_once fun="rotwing_request_configuration(ROTWING_CONFIGURATION_HOVER)"/>
      <attitude pitch="0" roll="0" throttle="0" until="FALSE" vmode="throttle"/>
    </block>
  </blocks>
</flight_plan>
