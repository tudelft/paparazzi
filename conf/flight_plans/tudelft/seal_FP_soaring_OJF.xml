<!DOCTYPE flight_plan SYSTEM "../flight_plan.dtd">

<flight_plan alt="3.2" ground_alt="0" lat0="51.990634" lon0="4.376789" max_dist_from_home="25" name="Seal_OJF" security_height="0.5">
  <header>
    #include "autopilot.h"
    #include "modules/datalink/datalink.h"
    #include "modules/radio_control/radio_control.h"
</header>
  <waypoints>
    <waypoint name="HOME" x="0.0" y="0.0"/>
    <waypoint name="STDBY" x="0.0" y="2.3"/>
    <waypoint name="SOAR" x="0.0" y="2.3" />
    <waypoint name="H1" x="0.0" y="25.0"/>
    <waypoint name="BACKUP" x="0.0" y="3.0"/>

    <waypoint alt="3.1" name="S1_WP" x="0.0" y="3.0" />
    <waypoint alt="2.92" name="S2_WP" x="0.0" y="2.36" />
    <waypoint alt="2.95" name="S3_WP" x="0.0" y="2.36" />
    <waypoint alt="2.95" name="S4_WP" x="0.0" y="1.72" />
    <waypoint alt="2.9" name="S5_WP" x="0.0" y="2.0" />
    <waypoint alt="3.05" name="S6_WP" x="0.0" y="1.82" />

<!--    <waypoint alt="3.0" name="P1" x="0.0" y="2.7" />-->
<!--    <waypoint alt="2.7" name="P2" x="0.0" y="3.5" />-->
<!--    <waypoint alt="3.4" name="P3" x="0.0" y="1.72" />-->
<!--    <waypoint alt="3.4" name="P4" x="0.0" y="2.4" />-->

    <waypoint name="CLIMB" x="-3" y="3"/>
    <waypoint name="GF1" x="-5" y="15"/>
    <waypoint name="GF2" x="-5" y="-15"/>
    <waypoint name="GF3" x="5" y="-15"/>
    <waypoint name="GF4" x="5" y="15"/>
  </waypoints>
  <sectors>
    <sector color="red" name="Geofence">
      <corner name="GF1"/>
      <corner name="GF2"/>
      <corner name="GF3"/>
      <corner name="GF4"/>
    </sector>
  </sectors>
  <exceptions>
    <!-- RC direct and AUTO1: in case of RC lost, it automatically goes into failsafe mode TODO: double check -->
    <!-- In AUTO2, if RC valid, don't throw the exceptions, except Geofence -->
    <!-- In AUTO2, RC lost but datalink and GPS valid, don't throw an exception TODO: double check // order? -->
    <!-- TODO: triple check every cases very carefully!!! (logically and NPS) -->
    <!-- TODO: also check 'do nothing' cases, make sure it does really nothing in those cases -->

<!--    &lt;!&ndash; In AUTO2, No RC, No Datalink, No GPS: Stay and descend (or kill??) &ndash;&gt;-->
<!--    <exception cond="autopilot.mode == MODE_AUTO2 && radio_control.status == RC_REALLY_LOST && datalink_time > 15 && !GpsFixValid() && !(nav_block == IndexOfBlock('Wait GPS')) && !(nav_block == IndexOfBlock('Geo init')) && !(nav_block == IndexOfBlock('Holding point'))" deroute="StayAndDescend"/>-->

<!--    &lt;!&ndash; In AUTO2, RC lost and datalink lost, it is an emergency, but it can still fly if GPS is fixed: stay there for some time and descend slowly&ndash;&gt;-->
<!--    <exception cond="autopilot.mode == MODE_AUTO2 && And(radio_control.status == RC_REALLY_LOST, datalink_time > 15) && GpsFixValid() && !(nav_block == IndexOfBlock('Wait GPS')) && !(nav_block == IndexOfBlock('Geo init')) && !(nav_block == IndexOfBlock('Holding point'))" deroute="StayAndDescend"/>-->

<!--    &lt;!&ndash; In AUTO2, RC lost and GPS lost, but still have datalink then we can do something from the ground; just stay there -> descend &ndash;&gt;-->
<!--    <exception cond="autopilot.mode == MODE_AUTO2 && And(radio_control.status == RC_REALLY_LOST, !GpsFixValid()) && !(nav_block == IndexOfBlock('Wait GPS')) && !(nav_block == IndexOfBlock('Geo init')) && !(nav_block == IndexOfBlock('Holding point'))" deroute="StayAndDescend"/>-->

<!--    &lt;!&ndash; In AUTO2, Datalink lost and GPS lost: stay there -> descend after 60 sec / safety pilot takes the control &ndash;&gt;-->
<!--    <exception cond="autopilot.mode == MODE_AUTO2 && And(datalink_time > 15, !GpsFixValid()) && !(nav_block == IndexOfBlock('Wait GPS')) && !(nav_block == IndexOfBlock('Geo init')) && !(nav_block == IndexOfBlock('Holding point'))" deroute="StayAndDescend"/>-->

<!--    &lt;!&ndash; AUTO2, (outside of geofence || alt higher than 150m) && GPS fixed && (not in preparation blocks) : GEOFENCE block (go to STDBY) &ndash;&gt;-->
<!--    <exception cond="autopilot.mode == MODE_AUTO2 && Or(!InsideGeofence(GetPosX(), GetPosY()), GetPosAlt() > GetAltRef() + 150) && GpsFixValid() && !(nav_block == IndexOfBlock('Wait GPS')) && !(nav_block == IndexOfBlock('Geo init')) && !(nav_block == IndexOfBlock('Holding point'))" deroute="GeoFence"/>-->

<!--    &lt;!&ndash;    AUTO2, Datalink lost, GPS valid; &ndash;&gt;-->
<!--&lt;!&ndash;    <exception cond="autopilot.mode == MODE_AUTO2 && GpsFixValid() && datalink_time > 10  && !(nav_block == IndexOfBlock('Wait GPS')) && !(nav_block == IndexOfBlock('Geo init')) && !(nav_block == IndexOfBlock('Holding point'))" deroute="ReturnStbyThrottle"/>&ndash;&gt;-->

<!--    &lt;!&ndash;    in Auto2: GPS failure, Datalink valid &ndash;&gt;-->
<!--&lt;!&ndash;    <exception cond="autopilot.mode == MODE_AUTO2 && !GpsFixValid()  && !(nav_block == IndexOfBlock('Wait GPS')) && !(nav_block == IndexOfBlock('Geo init')) && !(nav_block == IndexOfBlock('Holding point'))" deroute="ReturnStbyThrottle"/>&ndash;&gt;-->

<!--    &lt;!&ndash;    AUTO2, Datalink lost && RC lost, GPS valid;&ndash;&gt;-->
<!--    &lt;!&ndash;    <exception cond="autopilot.mode == MODE_AUTO2 && GpsFixValid() && datalink_time > 10 && radio_control.status == RC_REALLY_LOST && !(nav_block == IndexOfBlock('Wait GPS')) && !(nav_block == IndexOfBlock('Geo init')) && !(nav_block == IndexOfBlock('Holding point'))" deroute="ReturnStbyThrottle"/>&ndash;&gt;-->
  </exceptions>

  <blocks>
    <block name="Wait GPS">
      <call_once fun="NavKillThrottle()"/>
      <while cond="!GpsFixValid()"/>
    </block>
    <block name="Geo init">
      <while cond="LessThan(NavBlockTime(), 10)"/>
      <call_once fun="NavSetAltitudeReferenceHere()"/>
    </block>
    <block name="Holding point">
      <call_once fun="NavKillThrottle()"/>
      <attitude pitch="0" roll="0" throttle="0" until="FALSE" vmode="throttle"/>
    </block>
    <block name="Start Engine">
      <call_once fun="NavResurrect()"/>
      <attitude pitch="0" roll="0" throttle="0" until="FALSE" vmode="throttle"/>
    </block>
<!--    <block name="Climb">-->
<!--      <call_once fun="NavResurrect()"/>-->
<!--      <go pitch="20" throttle="1.0" wp="CLIMB"/>-->
<!--    </block>-->
    <block name="SetStbyHere3D">
      <call_once fun="waypoint_set_here(WP_STDBY)"/>
      <deroute block="Standby"/>
    </block>
    <block name="SetStbyHere2D">
      <call_once fun="waypoint_set_here_2d(WP_STDBY)"/>
      <deroute block="Standby"/>
    </block>
    <block name="Standby" strip_button="Standby" strip_icon="home.png">
      <call_once fun="NavResurrect()"/>
      <call_once fun="guidance_indi_hybrid_soaring_stop()"/>
      <call_once fun="nav_set_heading_towards_waypoint(WP_H1)"/>
      <go wp="STDBY"/>
      <stay wp="STDBY"/>
    </block>
    <block name="Soaring" strip_button="Soar" strip_icon="target.png">
      <call_once fun="nav_set_heading_towards_waypoint(WP_H1)"/>
<!--      <call_once fun="waypoint_set_here(WP_SOAR)"/>-->
      <call_once fun="guidance_indi_hybrid_soaring_start()"/>
      <go wp="SOAR"/>
      <call_once fun="nav_set_heading_towards_waypoint(WP_H1)"/>
      <stay wp="SOAR"/>
    </block>
    <block name="STAY_S1_SAFE">
      <call_once fun="guidance_indi_hybrid_soaring_stop()"/>
      <call_once fun="nav_set_heading_towards_waypoint(WP_H1)"/>
      <go wp="S1_WP"/>
      <call_once fun="nav_set_heading_towards_waypoint(WP_H1)"/>
      <stay wp="S1_WP"/>
    </block>
    <block name="STAY_S5_DOWN">
      <call_once fun="guidance_indi_hybrid_soaring_stop()"/>
      <call_once fun="nav_set_heading_towards_waypoint(WP_H1)"/>
      <go wp="S5_WP"/>
      <call_once fun="nav_set_heading_towards_waypoint(WP_H1)"/>
      <stay wp="S5_WP"/>
    </block>
    <block name="STAY_S3_BACK">
      <call_once fun="guidance_indi_hybrid_soaring_stop()"/>
      <call_once fun="nav_set_heading_towards_waypoint(WP_H1)"/>
      <go wp="S3_WP"/>
      <call_once fun="nav_set_heading_towards_waypoint(WP_H1)"/>
      <stay wp="S3_WP"/>
    </block>
    <block name="STAY_S6_UP">
      <call_once fun="guidance_indi_hybrid_soaring_stop()"/>
      <call_once fun="nav_set_heading_towards_waypoint(WP_H1)"/>
      <go wp="S6_WP"/>
      <call_once fun="nav_set_heading_towards_waypoint(WP_H1)"/>
      <stay wp="S6_WP"/>
    </block>
    <block name="STAY_S2_SOAR">
      <call_once fun="guidance_indi_hybrid_soaring_stop()"/>
      <call_once fun="nav_set_heading_towards_waypoint(WP_H1)"/>
      <go wp="S2_WP"/>
      <call_once fun="nav_set_heading_towards_waypoint(WP_H1)"/>
      <stay wp="S2_WP"/>
    </block>
    <block name="STAY_S4_BACK">
      <call_once fun="guidance_indi_hybrid_soaring_stop()"/>
      <call_once fun="nav_set_heading_towards_waypoint(WP_H1)"/>
      <go wp="S4_WP"/>
      <call_once fun="nav_set_heading_towards_waypoint(WP_H1)"/>
      <stay wp="S4_WP"/>
    </block>
<!--    <block name="P1_SAFE">-->
<!--      <call_once fun="guidance_indi_hybrid_soaring_stop()"/>-->
<!--      <call_once fun="nav_set_heading_towards_waypoint(WP_H1)"/>-->
<!--      <go wp="P1"/>-->
<!--      <call_once fun="nav_set_heading_towards_waypoint(WP_H1)"/>-->
<!--      <stay wp="P1"/>-->
<!--    </block>-->
<!--    <block name="P2_DOWN_FORWARD">-->
<!--      <call_once fun="guidance_indi_hybrid_soaring_stop()"/>-->
<!--      <call_once fun="nav_set_heading_towards_waypoint(WP_H1)"/>-->
<!--      <go wp="P2"/>-->
<!--      <call_once fun="nav_set_heading_towards_waypoint(WP_H1)"/>-->
<!--      <stay wp="P2"/>-->
<!--    </block>-->
<!--    <block name="P3_UP_BACKWARD">-->
<!--      <call_once fun="guidance_indi_hybrid_soaring_stop()"/>-->
<!--      <call_once fun="nav_set_heading_towards_waypoint(WP_H1)"/>-->
<!--      <go wp="P3"/>-->
<!--      <call_once fun="nav_set_heading_towards_waypoint(WP_H1)"/>-->
<!--      <stay wp="P3"/>-->
<!--    </block>-->
<!--    <block name="P4_FORWARD">-->
<!--      <call_once fun="guidance_indi_hybrid_soaring_stop()"/>-->
<!--      <call_once fun="nav_set_heading_towards_waypoint(WP_H1)"/>-->
<!--      <go wp="P4"/>-->
<!--      <call_once fun="nav_set_heading_towards_waypoint(WP_H1)"/>-->
<!--      <stay wp="P4"/>-->
<!--    </block>-->
    <block name="ReturnStbyThrottle">
      <exception cond="And(!(radio_control.status == RC_REALLY_LOST), And(InsideGeofence(GetPosX(), GetPosY()), And(MoreThan(GetPosAlt(), GetAltRef() + 20), LessThan(GetPosAlt(), GetAltRef() + 70))))" deroute="Standby"/>
      <call_once fun="guidance_indi_hybrid_soaring_stop()"/>
      <go wp="STDBY"/>
      <stay wp="STDBY"/>
    </block>
    <block name="ReturnStbyNoThrottle">
      <exception cond="And(!(radio_control.status == RC_REALLY_LOST), And(InsideGeofence(GetPosX(), GetPosY()), And(MoreThan(GetPosAlt(), GetAltRef() + 20), LessThan(GetPosAlt(), GetAltRef() + 70))))" deroute="Standby"/>
      <set value="1" var="autopilot.kill_throttle"/>
      <call_once fun="NavKillThrottle()"/>
      <stay wp="STDBY"/>
    </block>
    <block name="GeoFence">
      <call_once fun="guidance_indi_hybrid_soaring_stop()"/>
      <go wp="STDBY"/>
      <stay wp="STDBY"/>
    </block>
    <block name="StayAndDescend">
      <call_once fun="guidance_indi_hybrid_soaring_stop()"/>
      <call_once fun="waypoint_set_here(WP_STDBY)"/>
      <go wp="STDBY"/>
      <stay wp="STDBY" until="stage_time @GT 5"/>
<!--      <while cond="TRUE">-->
<!--        <go wp="STDBY"/>-->
<!--        <stay wp="STDBY" until="stage_time @GT 60"/>-->
<!--        <set var="nav_flight_altitude" value="GetPosAlt()-2"/>-->
<!--      </while>-->
      <stay climb="-0.5" vmode="climb" wp="STDBY"/>
    </block>
  </blocks>
</flight_plan>
