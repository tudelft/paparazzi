<!DOCTYPE flight_plan SYSTEM "../flight_plan.dtd">

<flight_plan
        name="Flight Plan"
        lat0="51.990634" lon0="4.376789"
        ground_alt="0"
        security_height="0.4"
        max_dist_from_home="8"
        alt="2.0">

  <!--<header>-->
    <!--#include "autopilot.h"-->
    <!--#include "guidance/guidance_h.h"-->
    <!--#include "guidance/guidance_v.h"-->
    <!--#include "subsystems/ahrs.h"-->
    <!--#include "subsystems/electrical.h"-->
    <!--#include "subsystems/datalink/datalink.h"-->
  <!--</header>-->

  <waypoints>
    <!-- Mission waypoints -->
    <waypoint name="HOME" x="0.0" y="0.0"/>
  </waypoints>

  <!--<exceptions>-->
    <!--<exception cond="datalink_time > 2 && nav_is_in_flight()" deroute="Hover"/>-->
  <!--</exceptions>-->

  <blocks>
    <!-- Kill the throttle and wait for GPS fix -->
    <block name="Wait GPS">
      <call fun="KillEngines()"/>
      <while cond="!GpsFixValid()"/>
    </block>

    <!-- Wait 5 seconds and then set altitude reference -->
    <block name="Geo init">
      <call fun="ResetAlt()"/>
      <while cond="1"/>
    </block>

    <!--Hover at the current location-->
    <block name="Hover and wait">
      <call_once fun="sonar_obstacle_detect_on()"/>
      <call fun="Hover(1.5)"/>
      <while cond="1"/>
    </block>

    <block name="Take off">
      <call_once fun="sonar_obstacle_detect_off()"/>
      <call fun="StartEngines()"/>
      <call fun="TakeOff(0.1)"/>
      <call fun="WaitUntilAltitude(1)"/>
    </block>

 
    <block name="Hover 2 sec">
      <call_once fun="sonar_obstacle_detect_on()"/>
      <call fun="Hover(1.5)"/>
      <while cond="2 > block_time"/>
    </block>

    <block name="Find bucket">
      <call fun="bucket_heading_change()"/>
    </block>

    <block name="Approach bucket">
      <call fun="bucket_approach()"/>
      <exception cond="marker_lost == true" deroute="Find bucket"/>
    </block>

    <block name="Center bucket">
      <call fun="bucket_center()"/>
      <exception cond="marker_lost == true" deroute="Find bucket"/>
    </block>

    <block name="Land bucket">
      <call_once fun="sonar_obstacle_detect_off()"/>
      <call fun="Land(0.2)"/>             <!-- this call blocks until altitude < 0.38 -->
      <call_once fun="KillEngines()"/>
      <while cond="1"/>                   <!-- wait indefinitely -->

      <!--This is for landing pad-->
      <!--<exception cond="1.15 > marker1.mid_time" deroute="Hover"/>-->

      <!--This is for red bucket-->
      <!--<exception cond="!marker1.detected" deroute="Hover"/>-->
    </block>

    <block name="Detect Landing Pad">
      <call_once fun="detector_locate_helipad()"/>
      <while cond="1"/>
    </block>

    <block name="Detect Bucket">
      <call_once fun="detector_locate_bucket()"/>
      <while cond="1"/>
    </block>
    
    <block name="Close Gripper">
      <call_once fun="close_gripper()"/>
      <while cond="1"/>
    </block>
    
    <block name="Open Gripper">
      <call_once fun="open_gripper()"/>
      <while cond="1"/>
    </block>

    <!--<block name="Detect Landing Pad">-->
      <!--<call_once fun="detector_locate_helipad()"/>-->
      <!--<while cond="1"/>-->
    <!--</block>-->

    <!--<block name="Detect Bucket">-->
      <!--<call_once fun="detector_locate_bucket()"/>-->
      <!--<while cond="1"/>-->
    <!--</block>-->

  </blocks>
</flight_plan>
